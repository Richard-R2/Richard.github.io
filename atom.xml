<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>灰帽子</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://richardrenn.coding.me/"/>
  <updated>2018-12-20T16:19:28.560Z</updated>
  <id>https://richardrenn.coding.me/</id>
  
  <author>
    <name>任令仓</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>服务器配置 - Nginx安装配置</title>
    <link href="https://richardrenn.coding.me/Server-Nginx-Configuration.html"/>
    <id>https://richardrenn.coding.me/Server-Nginx-Configuration.html</id>
    <published>2018-12-20T11:58:56.000Z</published>
    <updated>2018-12-20T16:19:28.560Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><h3 id="2-增加代理配置"><a href="#2-增加代理配置" class="headerlink" title="2.增加代理配置"></a>2.增加代理配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/sites-available</span><br><span class="line">vim your_site_name</span><br></pre></td></tr></table></figure><blockquote><p>普通http配置参考：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># http server</span><br><span class="line">server &#123;</span><br><span class="line">       listen 80;</span><br><span class="line">       server_name your.site.name.cn;</span><br><span class="line">       # ssl on;</span><br><span class="line">       access_log /var/log/nginx/syour_site_name.access.log;</span><br><span class="line">       error_log /var/log/nginx/your_site_name.error.log;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://127.0.0.1:8011;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forward_For $proxy_add_x_forwarded_for;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>安全https配置参考：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># HTTPS server</span><br><span class="line">server &#123;</span><br><span class="line">        listen 443;</span><br><span class="line">        listen [::]:443 ipv6only=on;</span><br><span class="line">        server_name your.site.name.cn;</span><br><span class="line">        ssl on;</span><br><span class="line">        access_log /var/log/nginx/your_site_name.access.log;</span><br><span class="line">        error_log /var/log/nginx/your_site_name.error.log;</span><br><span class="line">        ssl_certificate /path/to/your/https/cert/your_site_name.pem;</span><br><span class="line">        ssl_certificate_key /path/to/your/https/cert/your_site_name.key;</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:8012;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forward_For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将文件链接至sites-enabled目录下。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/nginx/sites-available/your_site_name /etc/nginx/sites-enabled/your_site_name</span><br></pre></td></tr></table></figure><blockquote><p>*这是因为sites-available目录下存放的只是备选配置，sites-enabled目录下才是真正有效的代理设置。</p></blockquote><h3 id="3-Nginx配置"><a href="#3-Nginx配置" class="headerlink" title="3.Nginx配置"></a>3.Nginx配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>修改下前几行内容:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user www-data;</span><br><span class="line">worker_processes 4; # worker数</span><br><span class="line">worker_rlimit_nofile 60000; </span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections 65535; # 最大同时连接数</span><br><span class="line">        multi_accept on; # 开启接受同时连接选项</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-重载配置"><a href="#4-重载配置" class="headerlink" title="4.重载配置"></a>4.重载配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><p>这一步做完Nginx已经可以正常工作了。</p><h3 id="5-常用命令"><a href="#5-常用命令" class="headerlink" title="5.常用命令"></a>5.常用命令</h3><h5 id="5-1-启动"><a href="#5-1-启动" class="headerlink" title="5.1.启动"></a>5.1.启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/nginx</span><br></pre></td></tr></table></figure><h5 id="5-2-停止"><a href="#5-2-停止" class="headerlink" title="5.2.停止"></a>5.2.停止</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/nginx -s stop</span><br></pre></td></tr></table></figure><h5 id="5-3-验证配置文件是否正确"><a href="#5-3-验证配置文件是否正确" class="headerlink" title="5.3.验证配置文件是否正确"></a>5.3.验证配置文件是否正确</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/nginx -t</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Nginx服务器安装配置和常用命令
    
    </summary>
    
      <category term="服务器搭建" scheme="https://richardrenn.coding.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Linux" scheme="https://richardrenn.coding.me/tags/Linux/"/>
    
      <category term="服务器" scheme="https://richardrenn.coding.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Nginx" scheme="https://richardrenn.coding.me/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>服务器配置 - Redis安装配置</title>
    <link href="https://richardrenn.coding.me/Server-Redis-Configuration.html"/>
    <id>https://richardrenn.coding.me/Server-Redis-Configuration.html</id>
    <published>2018-12-20T11:39:11.000Z</published>
    <updated>2018-12-20T16:19:51.346Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install redis-server</span><br></pre></td></tr></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>这里仅介绍几个基本配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 端口</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"># 绑定服务器IP</span><br><span class="line">bind 139.xxx.xxx.xxx 127.0.0.1</span><br><span class="line"></span><br><span class="line"># 登录密码</span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure><h3 id="3-重启"><a href="#3-重启" class="headerlink" title="3.重启"></a>3.重启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/redis-server restart</span><br></pre></td></tr></table></figure><p>这一步做完redis-server已经可以正常工作了。</p><h3 id="4-常用命令"><a href="#4-常用命令" class="headerlink" title="4.常用命令"></a>4.常用命令</h3><h5 id="4-1-连接"><a href="#4-1-连接" class="headerlink" title="4.1.连接"></a>4.1.连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 139.xxx.xxx.xxx  -p 6379 -a 123456</span><br></pre></td></tr></table></figure><blockquote><p>如果是本地连接的话-h参数可以省略</p></blockquote><blockquote><p>使用默认端口6379的话-p参数可以省略</p></blockquote><blockquote><p>没有设置密码的话-a参数可以省略</p></blockquote><h5 id="4-2-关闭"><a href="#4-2-关闭" class="headerlink" title="4.2.关闭"></a>4.2.关闭</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli shutdown</span><br></pre></td></tr></table></figure><h5 id="4-2-启动服务器"><a href="#4-2-启动服务器" class="headerlink" title="4.2.启动服务器"></a>4.2.启动服务器</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Redis服务器安装配置和常用命令
    
    </summary>
    
      <category term="服务器搭建" scheme="https://richardrenn.coding.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Linux" scheme="https://richardrenn.coding.me/tags/Linux/"/>
    
      <category term="服务器" scheme="https://richardrenn.coding.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Redis" scheme="https://richardrenn.coding.me/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>GitHub教程 - Git安装配置</title>
    <link href="https://richardrenn.coding.me/Git-Configuration.html"/>
    <id>https://richardrenn.coding.me/Git-Configuration.html</id>
    <published>2018-12-20T11:09:54.000Z</published>
    <updated>2018-12-20T16:17:39.187Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-环境变量"><a href="#1-环境变量" class="headerlink" title="*1.环境变量"></a>*1.环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><blockquote><p>在后面添加以下内容,以解决某些包(如perl、git)安装时的warning</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=<span class="string">"C"</span></span><br><span class="line"><span class="built_in">export</span> LANGUAGE=<span class="string">"zh_CN:zh"</span></span><br></pre></td></tr></table></figure><p>当然也可以直接在命令终端中export临时设置环境变量</p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git <span class="comment"># 这是Ubuntu下的命令</span></span><br><span class="line">yum install git <span class="comment"># 这是CentOS下的命令</span></span><br><span class="line">brew install git <span class="comment"># 这是MAC下的命令</span></span><br></pre></td></tr></table></figure><h3 id="3-生成ssh密钥对"><a href="#3-生成ssh密钥对" class="headerlink" title="3.生成ssh密钥对"></a>3.生成ssh密钥对</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p>如果不想设置密码的话直接三次回车即可，和git生成密钥的命令相同。</p><blockquote><p>生成的密钥对位置在 ~/.ssh，查看下公钥，后面要用到。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><blockquote><p>内容类似下面这样</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC+am2s/r1n+xsipi/4H2ll8p3McdhQCLBwJGNbkaxpeWKtdbiUbqAWjHS436eNt/OF13VsyWLs5lb6J2I3J6GlCcEGMGOFc4gzLTP9e/TmXeyFlBMZkuSJTbsXvL9Q/tff/8Tgt4aVwR3OWlwfvPdtoyR0tGhDDQn8a0gzs04mPyMWjK6akt/zGCQ70Eo6stVMGCyMAL/PrHwdZ/puXjtw0T9HSs/ON/Jub+h3oKfgJVhpJNbIDR2r08LoEA0roTplI4aSR+JgnSKsXhIvTAUm+VRmWgz3oPYcNkaGkvBvA1gfk/baB6qxv0hkjPwtY5GIRkCU6cIcjG3U1LR6pnH+8Z0RbN9YaFFNRRf4rMnZ3n0jhYXCq7dzBoofLWRVlAqTlybF7xz9JNVQxiC+o5skBHJ/Eb7Ggtejc6TVW+FJaNUy5+yWqfhq57kC4zq+5HhAY9ToKZpYLKjJa7oG0eHAeOAgSd2jdDEvALegap4nrMHVLP8sOQlNFBMPjy1r0cW/Afp32gCtPOpQRuIkQdOnWUkzjObGTLaVffanhYnX470UNsvgQ+IyikhS5tiKPqkT317v6yFV4doeZgfNYtcgpLVZcVxkItTLS1h75d4h4MD2JVRk2nBGSLp5j2WIji4Tiy++LblV1Y5Y2wRcfefdXCIMT3jMNAcyhuCaNfaD/Q== your_email@example.com</span><br></pre></td></tr></table></figure><h3 id="4-公钥添加到GitHub"><a href="#4-公钥添加到GitHub" class="headerlink" title="4.公钥添加到GitHub"></a>4.公钥添加到GitHub</h3><p>传送门：<a href="https://github.com/settings/ssh/new" rel="external nofollow noopener noreferrer" target="_blank">点击这里添加你自己的公钥</a></p><blockquote><p>将上一步的公钥拷贝下来，粘贴至GitHub网页以下位置</p></blockquote><p><img src="/images/git/id_rsa_pub_paste.png" alt="id_rsa_pub_paste"></p><h3 id="5-配置用户名和邮箱"><a href="#5-配置用户名和邮箱" class="headerlink" title="5.配置用户名和邮箱"></a>5.配置用户名和邮箱</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">git config --global user.email <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><h3 id="6-克隆代码"><a href="#6-克隆代码" class="headerlink" title="6.克隆代码"></a>6.克隆代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:user_name/project_name.git /path/to/your/sourcecode</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Git安装配置
    
    </summary>
    
      <category term="GitHub教程" scheme="https://richardrenn.coding.me/categories/GitHub%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://richardrenn.coding.me/tags/Git/"/>
    
      <category term="GitHub" scheme="https://richardrenn.coding.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>服务器搭建 - 为服务器添加ssh公钥验证</title>
    <link href="https://richardrenn.coding.me/Server-SSH-Key.html"/>
    <id>https://richardrenn.coding.me/Server-SSH-Key.html</id>
    <published>2018-12-20T09:51:00.000Z</published>
    <updated>2018-12-20T16:20:16.745Z</updated>
    
    <content type="html"><![CDATA[<p>使用ssh密钥对登陆，可以避免每次登陆都要输入密码，便捷的同时也提高了安全性。</p><h3 id="1-生成密钥对"><a href="#1-生成密钥对" class="headerlink" title="1.生成密钥对"></a>1.生成密钥对</h3><blockquote><p>在本地运行如下命令：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p>如果不想设置密码的话直接三次回车即可，和git生成密钥的命令相同。</p><blockquote><p>生成的密钥对位置在 ~/.ssh，查看下公钥，下一步要用到。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><blockquote><p>内容类似下面这样</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC+am2s/r1n+xsipi/4H2ll8p3McdhQCLBwJGNbkaxpeWKtdbiUbqAWjHS436eNt/OF13VsyWLs5lb6J2I3J6GlCcEGMGOFc4gzLTP9e/TmXeyFlBMZkuSJTbsXvL9Q/tff/8Tgt4aVwR3OWlwfvPdtoyR0tGhDDQn8a0gzs04mPyMWjK6akt/zGCQ70Eo6stVMGCyMAL/PrHwdZ/puXjtw0T9HSs/ON/Jub+h3oKfgJVhpJNbIDR2r08LoEA0roTplI4aSR+JgnSKsXhIvTAUm+VRmWgz3oPYcNkaGkvBvA1gfk/baB6qxv0hkjPwtY5GIRkCU6cIcjG3U1LR6pnH+8Z0RbN9YaFFNRRf4rMnZ3n0jhYXCq7dzBoofLWRVlAqTlybF7xz9JNVQxiC+o5skBHJ/Eb7Ggtejc6TVW+FJaNUy5+yWqfhq57kC4zq+5HhAY9ToKZpYLKjJa7oG0eHAeOAgSd2jdDEvALegap4nrMHVLP8sOQlNFBMPjy1r0cW/Afp32gCtPOpQRuIkQdOnWUkzjObGTLaVffanhYnX470UNsvgQ+IyikhS5tiKPqkT317v6yFV4doeZgfNYtcgpLVZcVxkItTLS1h75d4h4MD2JVRk2nBGSLp5j2WIji4Tiy++LblV1Y5Y2wRcfefdXCIMT3jMNAcyhuCaNfaD/Q== your_email@example.com</span><br></pre></td></tr></table></figure><h3 id="2-添加到服务器"><a href="#2-添加到服务器" class="headerlink" title="2.添加到服务器"></a>2.添加到服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh root@server_ip <span class="comment"># 登陆服务器</span></span><br><span class="line">mkdir .ssh <span class="comment"># 创建.ssh目录</span></span><br><span class="line">vim .ssh/authorized_keys <span class="comment"># 创建已验证的密钥记录文件</span></span><br></pre></td></tr></table></figure><blockquote><p>在vim编辑器中按i键，把上一步的公钥拷贝进来，多个公钥的话换行隔开即可。然后按ESC键退出编辑模式，输入:wq回车即可保存文件。</p><p>这样以后输入ssh root@ip命令就可以不用输入密码直接进去了。</p></blockquote><h3 id="3-更快捷地登陆"><a href="#3-更快捷地登陆" class="headerlink" title="3.更快捷地登陆"></a>3.更快捷地登陆</h3><p>完成上面的配置后，还可以通过对本地ssh进行配置以进一步简化登陆操作。</p><blockquote><p>在本地打开~/.ssh/config 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/config</span><br></pre></td></tr></table></figure><blockquote><p>添加如下配置内容:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host happy</span><br><span class="line">Hostname 139.xxx.xxx.xxx</span><br><span class="line">User root</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><blockquote><p>以后在本地直接输入以下命令就可登陆远程服务器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh happy</span><br></pre></td></tr></table></figure><blockquote><p>多个服务器配置只需换行隔开即可。</p></blockquote>]]></content>
    
    <summary type="html">
    
      如何使用ssh密钥对登陆服务器
    
    </summary>
    
      <category term="服务器搭建" scheme="https://richardrenn.coding.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Linux" scheme="https://richardrenn.coding.me/tags/Linux/"/>
    
      <category term="ssh" scheme="https://richardrenn.coding.me/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>服务器配置 - Nginx+Gunicorn+Supervisor+Flask</title>
    <link href="https://richardrenn.coding.me/Server-Configuration.html"/>
    <id>https://richardrenn.coding.me/Server-Configuration.html</id>
    <published>2018-12-20T08:47:24.000Z</published>
    <updated>2018-12-20T16:19:03.516Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-为服务器添加ssh公钥验证"><a href="#1-为服务器添加ssh公钥验证" class="headerlink" title="1.为服务器添加ssh公钥验证"></a>1.<a href="/Server-SSH-Key.html">为服务器添加ssh公钥验证</a></h3><h3 id="2-Git安装配置"><a href="#2-Git安装配置" class="headerlink" title="2.Git安装配置"></a>2.<a href="/Git-Configuration.html">Git安装配置</a></h3><h3 id="3-Redis安装配置"><a href="#3-Redis安装配置" class="headerlink" title="3.Redis安装配置"></a>3.<a href="/Server-Redis-Configuration.html">Redis安装配置</a></h3><h3 id="4-Nginx安装配置"><a href="#4-Nginx安装配置" class="headerlink" title="4.Nginx安装配置"></a>4.<a href="/Server-Nginx-Configuration.html">Nginx安装配置</a></h3><h3 id="5-下载代码-配置Python虚拟环境"><a href="#5-下载代码-配置Python虚拟环境" class="headerlink" title="5.下载代码,配置Python虚拟环境"></a>5.<a href="/Python-Virtualenv.html">下载代码,配置Python虚拟环境</a></h3><h3 id="6-Gunicorn安装配置"><a href="#6-Gunicorn安装配置" class="headerlink" title="6.Gunicorn安装配置"></a>6.<a href="/Server-Gunicorn-Configuration.html">Gunicorn安装配置</a></h3><h3 id="7-Supervisor安装配置"><a href="#7-Supervisor安装配置" class="headerlink" title="7.Supervisor安装配置"></a>7.<a href="/Server-Supervisor-Configuration.html">Supervisor安装配置</a></h3>]]></content>
    
    <summary type="html">
    
      使用Nginx+Gunicorn+Supervisor+Flask搭建RESTFul API服务器
    
    </summary>
    
      <category term="服务器搭建" scheme="https://richardrenn.coding.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Linux" scheme="https://richardrenn.coding.me/tags/Linux/"/>
    
      <category term="服务器" scheme="https://richardrenn.coding.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>GitHub教程 - 分支工作流程</title>
    <link href="https://richardrenn.coding.me/GitHub-Branch-Workflow.html"/>
    <id>https://richardrenn.coding.me/GitHub-Branch-Workflow.html</id>
    <published>2018-12-18T15:28:03.000Z</published>
    <updated>2018-12-20T16:18:17.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-更新代码"><a href="#1-更新代码" class="headerlink" title="1.更新代码"></a>1.更新代码</h3><blockquote><p>进入代码目录，更新代码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/workspace/sourcecode/richardrenn/slark</span><br><span class="line">git pull origin master</span><br><span class="line">*git pull upstream master</span><br></pre></td></tr></table></figure><blockquote><p>*查看所有远端库情况</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">origin        git@github.com:RichardRenn/slark.git (fetch)</span><br><span class="line">origin        git@github.com:RichardRenn/slark.git (push)</span><br><span class="line">upstream        git@github.com:southflower/slark.git (fetch)</span><br><span class="line">upstream        git@github.com:southflower/slark.git (push)</span><br></pre></td></tr></table></figure><blockquote><p>*查看所有分支情况，可看到当前的分支是origin/master</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/release</span><br><span class="line">  remotes/upstream/master</span><br><span class="line">  remotes/upstream/release</span><br></pre></td></tr></table></figure><h3 id="2-新建分支"><a href="#2-新建分支" class="headerlink" title="2.新建分支"></a>2.新建分支</h3><blockquote><p>本地新建分支，并切换到新建的分支</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure><h3 id="3-推送分支"><a href="#3-推送分支" class="headerlink" title="3.推送分支"></a>3.推送分支</h3><blockquote><p>推送新分支到远端库和上游库，冒号前的是本地分支名，冒号后的是远程分支名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin dev:dev</span><br><span class="line">git push upstream dev:dev</span><br></pre></td></tr></table></figure><blockquote><p>此时再敲git branch -a 就可以看到已经在远端库和上游库都建好了分支</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/dev</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/release</span><br><span class="line">  remotes/upstream/dev</span><br><span class="line">  remotes/upstream/master</span><br><span class="line">  remotes/upstream/release</span><br></pre></td></tr></table></figure><h3 id="4-提交修改"><a href="#4-提交修改" class="headerlink" title="4.提交修改"></a>4.提交修改</h3><blockquote><p>在本地的dev分支修改文件并提交推送到远端库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add [file]</span><br><span class="line">git commit -m <span class="string">"something"</span></span><br><span class="line">git push origin dev</span><br><span class="line">*git push upstream dev   <span class="comment"># 这一步直接推送到上游库的dev分支，可以省一次PR</span></span><br></pre></td></tr></table></figure><h3 id="5-提交PR"><a href="#5-提交PR" class="headerlink" title="5.提交PR"></a>5.提交PR</h3><blockquote><p>在网页通过PR的方式将dev代码推送到上游库的dev分支</p></blockquote><h3 id="6-Fork仓库"><a href="#6-Fork仓库" class="headerlink" title="6.Fork仓库"></a>6.Fork仓库</h3><blockquote><p>等dev调试稳定后再通过PR的方式将上游库的dev分支merge到其master分支，即可上线</p></blockquote><hr><ul><li>PR操作可以参考<a href="/GitHub-Pull-Request-Workflow.html">Pull Request 工作流程</a></li></ul>]]></content>
    
    <summary type="html">
    
      使用GitHub的分支机制协同完成代码提交工作
    
    </summary>
    
      <category term="GitHub教程" scheme="https://richardrenn.coding.me/categories/GitHub%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://richardrenn.coding.me/tags/Git/"/>
    
      <category term="GitHub" scheme="https://richardrenn.coding.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>GitHub教程 - Pull request 工作流程</title>
    <link href="https://richardrenn.coding.me/GitHub-Pull-Request-Workflow.html"/>
    <id>https://richardrenn.coding.me/GitHub-Pull-Request-Workflow.html</id>
    <published>2018-12-18T12:27:28.000Z</published>
    <updated>2018-12-20T16:18:40.134Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Fork仓库"><a href="#1-Fork仓库" class="headerlink" title="1.Fork仓库"></a>1.Fork仓库</h3><blockquote><p>先在github上将源仓库fork到自己的仓库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">源仓库：git@github.com:southflower/slark.git</span><br><span class="line">fork后：git@github.com:RichardRenn/slark.git</span><br></pre></td></tr></table></figure><h3 id="2-检出代码"><a href="#2-检出代码" class="headerlink" title="2.检出代码"></a>2.检出代码</h3><blockquote><p>在本地检出fork后的仓库代码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/workspace/sourcecode/richardrenn</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:RichardRenn/slark.git ./slark</span><br></pre></td></tr></table></figure><h3 id="3-关联上游源仓库"><a href="#3-关联上游源仓库" class="headerlink" title="3.关联上游源仓库"></a>3.关联上游源仓库</h3><blockquote><p>进入代码目录，加入上游源仓库关联</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./slark</span><br><span class="line">git remote add upstream git@github.com:southflower/slark.git</span><br></pre></td></tr></table></figure><h3 id="4-更新代码"><a href="#4-更新代码" class="headerlink" title="4.更新代码"></a>4.更新代码</h3><blockquote><p>更新源仓库代码到本地仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch upstream</span><br><span class="line">git merge upstream/master</span><br></pre></td></tr></table></figure><h3 id="5-提交代码"><a href="#5-提交代码" class="headerlink" title="5.提交代码"></a>5.提交代码</h3><blockquote><p>在本地仓库中，修改代码后提交到自己的远端仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"anything"</span></span><br><span class="line">git push origin mater</span><br></pre></td></tr></table></figure><h3 id="6-提交PR"><a href="#6-提交PR" class="headerlink" title="6.提交PR"></a>6.提交PR</h3><blockquote><p>在github网页上提交PR<br>在自己的仓库界面点击”New Pull Request”</p></blockquote><p><img src="/images/git/pull_request.png" alt="pull_request"></p><h3 id="7-PR合入"><a href="#7-PR合入" class="headerlink" title="7.PR合入"></a>7.PR合入</h3><blockquote><p>然后待源仓库的作者将你的PR合入即可</p></blockquote><hr><ul><li>带分支的工作方式可以参考<a href="/GitHub-Branch-Workflow.html">分支工作流程</a></li></ul>]]></content>
    
    <summary type="html">
    
      使用GitHub的PR机制协同完成代码提交工作
    
    </summary>
    
      <category term="GitHub教程" scheme="https://richardrenn.coding.me/categories/GitHub%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://richardrenn.coding.me/tags/Git/"/>
    
      <category term="GitHub" scheme="https://richardrenn.coding.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://richardrenn.coding.me/hello-world.html"/>
    <id>https://richardrenn.coding.me/hello-world.html</id>
    <published>2018-12-15T06:25:47.493Z</published>
    <updated>2018-12-20T14:37:50.018Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
